<div class="file-upload">
    <button class="file-upload-btn" type="button" onclick="$('.file-upload-input').trigger( 'click' )">Add
        Video</button>

    <div class="image-upload-wrap">
        <input id="fileinput" class="file-upload-input" type='file' accept="video/*" />
        <div class="drag-text">
            <h3>Drag and drop a file or select add Video</h3>
        </div>
    </div>
    <div class="file-upload-content">
        <img class="file-upload-image" src="#" alt="your video" />
        <canvas id="canvas-element"></canvas>

        <div class="image-title-wrap">
            <button type="button" onclick="removeUpload()" class="remove-image">Remove <span
                    class="image-title">Uploaded Video</span></button>
        </div>
        <textarea id="file_info" class="resize-none border rounded-md resize"
            style="width: 520px;height:500px;"></textarea>

    </div>
    <div id="loading_circle" class="circle" style="display: none;">

    </div>
</div>


<div class="relative px-4 py-3 leading-normal text-red-700 bg-red-100 rounded-lg" role="alert">
    <span class="absolute inset-y-0 left-0 flex items-center ml-4">
        <svg class="w-4 h-4 fill-current" viewBox="0 0 20 20">
            <path
                d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                clip-rule="evenodd" fill-rule="evenodd"></path>
        </svg>
    </span>
    <p class="ml-6">Exception handling is insufficient because it is under development. If a same file's name exists on
        the server, an error occurs. Limit to content with a duration of 1 minute or longer.</p>
</div>

<style>
    body {
        font-family: sans-serif;
        background-color: #eeeeee;
    }

    .file-upload {
        background-color: #ffffff;
        width: 600px;
        margin: 0 auto;
        padding: 20px;
    }

    .file-upload-btn {
        width: 100%;
        margin: 0;
        color: #fff;
        background: #5c5c5c;
        border: none;
        padding: 10px;
        border-radius: 4px;
        border-bottom: 4px solid #8b8b8b;
        transition: all .2s ease;
        outline: none;
        text-transform: uppercase;
        font-weight: 700;
    }

    .file-upload-btn:hover {
        background: #c4c4c4;
        color: #000000;
        transition: all .2s ease;
        cursor: pointer;
    }

    .file-upload-btn:active {
        border: 0;
        transition: all .2s ease;
    }

    .file-upload-content {
        display: none;
        text-align: center;
    }

    .file-upload-input {
        position: absolute;
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        outline: none;
        opacity: 0;
        cursor: pointer;
    }

    .image-upload-wrap {
        margin-top: 20px;
        border: 4px dashed #c4c4c4;
        position: relative;
    }

    .image-dropping,
    .image-upload-wrap:hover {
        background-color: #c4c4c4;
        border: 4px dashed #ffffff;
    }

    .image-title-wrap {
        padding: 0 15px 15px 15px;
        color: #222;
    }

    .drag-text {
        text-align: center;
    }

    .drag-text h3 {
        font-weight: 100;
        text-transform: uppercase;
        color: #757575;
        padding: 60px 0;
    }

    .file-upload-image {
        max-height: 200px;
        max-width: 200px;
        margin: auto;
        padding: 20px;
    }

    .remove-image {
        width: 500px;
        margin: 0;
        color: rgb(247, 164, 164);
        background: #cd4535;
        border: none;
        padding: 10px;
        border-radius: 4px;
        border-bottom: 4px solid #b02818;
        transition: all .2s ease;
        outline: none;
        text-transform: uppercase;
        font-weight: 700;
    }

    .remove-image:hover {
        background: #c13b2a;
        color: #ffffff;
        transition: all .2s ease;
        cursor: pointer;
    }

    .remove-image:active {
        border: 0;
        transition: all .2s ease;
    }

    .circle {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 200px;
        height: 200px;
        background: transparent;
        border: 13px solid rgba(196, 191, 191, 0.3);
        border-radius: 50%;
        border-top: 13px solid rgb(58, 57, 57);
        animation: animate 2s infinite linear;
        padding: 0;
        margin: 0;
    }

    @keyframes animate {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }
</style>


<script>

    const fileinput = document.getElementById('fileinput')
    MediaInfo({ format: 'JSON' }, (mediainfo) => {
        fileinput.addEventListener('change', () => autherize(mediainfo))
    })

    function autherize(mediainfo) {

        const isAuth = window.ethEnabled();
        if (isAuth) {
            var storage_accounts = localStorage.getItem('accounts');

            console.log('account:', window.accounts)
            console.log('storage_accounts', storage_accounts)
            if (fileinput.files && fileinput.files[0]) {
                if (window.accounts && window.accounts > 0) {
                    this.readURL(mediainfo, accounts[0])
                } else {
                    if(storage_accounts){
                        this.readURL(mediainfo, storage_accounts)
                    }else{
                        alert(' Active wallet account is not found')
                        $("#fileinput").val('')
                    }
                }
            }else {
                console.log('file not found !!!')
                $("#fileinput").val('')
            }

        } else {
            console.log('not auth')
            $("#fileinput").val('')
        }
    }

    function readURL(mediainfo, currentAccount) {
        $('#loading_circle').show()
        if (fileinput.files && fileinput.files[0]) {

            var file = fileinput.files[0];

            var reader = new FileReader();

            reader.onload = function (e) {
                $('.image-upload-wrap').hide();

                $('.file-upload-image').attr('src', e.target.result);
                $('.file-upload-content').show();

                $('.image-title').html(file.name);

            };

            reader.readAsDataURL(file);

            const getSize = () => file.size;

            const readChunk = (chunkSize, offset) =>

                new Promise((resolve, reject) => {
                    const reader = new FileReader()
                    reader.onload = (event) => {
                        if (event.target.error) {
                            reject(event.target.error)
                        }
                        resolve(new Uint8Array(event.target.result))

                    }
                    reader.readAsArrayBuffer(file.slice(offset, offset + chunkSize))
                })


            mediainfo
                .analyzeData(getSize, readChunk)
                .then((result) => {
                    //output.value = result
                    $('#file_info').val(result);

                    axios.post('https://s20eb48fgl.execute-api.ap-northeast-2.amazonaws.com/dev/v1/video/upload', JSON.stringify({
                        "name": file.name,
                        "type": file.type,
                        "account": currentAccount,
                        "mediainfo": result
                    }))
                        .then(function (res) {
                            console.log(res);
                            console.log('url ===>', res.data.uploadURL)

                            var options = {
                                headers: {
                                    'Access-Control-Allow-Origin': '*',
                                    'Access-Control-Allow-Methods': 'HEAD,GET,PUT,POST,DELETE',
                                    'x-amz-acl': 'public-read'
                                }
                            };
                            console.log('res:', res)
                            console.log('url:', res.data.uploadURL)
                            //var myFile = reader.result;
                            //const myNewFile = new File([myFile], uuid.v4(), { type: myFile.type });
                            axios.put(res.data.uploadURL, reader.result, options)
                                .then(function (uploaded) {
                                    console.log(uploaded);

                                    if (uploaded.status == 200) {
                                        alert('upload complete !!')
                                        $('#loading_circle').hide()
                                    }
                                })
                                .catch(function (error) {
                                    console.log('error >>>>>>>>>>>>>')
                                    console.log(error);
                                    $('#loading_circle').hide()
                                });

                        })
                        .catch(function (error) {
                            console.log(error);
                            $('#loading_circle').hide()
                        });
                })
                .catch((error) => {
                    console.log(`An error occured:\n${error.stack}`)
                    $('#loading_circle').hide()
                })


            return;

            axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';
            axios.defaults.headers.post['Access-Control-Allow-Methods'] = 'HEAD,GET,PUT,POST,DELETE';
            //axios.defaults.headers.post['Access-Control-Allow-Credentials'] = true;
            //axios.defaults.headers.post['Access-Control-Expose-Headers'] = 'Access-Control-Allow-Origin';
            //axios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';


        } else {
            removeUpload();
        }
    }

    function upload(path, payload) {

        console.log('upload:', path)

        axios.post(path, payload)
            .then(function (response) {
                console.log(response);
                alert(response.status)
            })
            .catch(function (error) {
                console.log(error);
            });
    }

    function removeUpload() {
        $('.file-upload-input').replaceWith($('.file-upload-input').clone());
        $('.file-upload-content').hide();
        $('.image-upload-wrap').show();

        $("#fileinput").val('')

        //var cloned = $("#fileinput").clone(true);
        //cloned.val("");
        //$("#fileinput").replaceWith(cloned);

        //MediaInfo({ format: 'text' }, (mediainfo) => {
        //  cloned.addEventListener('change', () => readURL(mediainfo))
        //})

    }

    $('.image-upload-wrap').bind('dragover', function () {
        $('.image-upload-wrap').addClass('image-dropping');
    });
    $('.image-upload-wrap').bind('dragleave', function () {
        $('.image-upload-wrap').removeClass('image-dropping');
    });


</script>

<!--

            fetch('https://sazao66tpl.execute-api.ap-northeast-2.amazonaws.com/dev/v1/video/upload', {
                method: 'POST',
                body: JSON.stringify({
                    name:input.files[0].name,
                    type:input.files[0].type;
                })
            })
                .then(response => response.json())
                .then(data => {

                    console.log('222')
                    console.log(data)
                    var securityPath = data.uploadURL
                    console.log('securityPath', securityPath)

                    upload(securityPath, reader.result)
                })
                .catch(error => {
                    console.error(error)
                })



        fetch(path, {
            method: 'POST',
            headers:{
                'Access-Control-Allow-Origin': "*",
                'Access-Control-Allow-Headers': "*"
            },
            body: payload
        })
            .then(response => response.json())
            .then(data => {

                console.log('uploaded')
                //console.log(data)
            })
            .catch(error => {
                console.error(error)
            })


             axios.put(res.data.uploadURL, reader.result, options)
            .then(function (uploaded) {
                console.log(uploaded);
                alert(uploaded.status)
            })
            .catch(function (error) {
                console.log(error);
            });
-->